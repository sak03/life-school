{"version":3,"file":"static/js/651.3b3a85d3.chunk.js","mappings":"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","sources":["../node_modules/primereact/inputtextarea/inputtextarea.esm.js","views/admin/careers/Careers.js","../node_modules/primereact/divider/divider.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, classNames, DomHandler } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar InputTextarea = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var elementRef = React.useRef(ref);\n  var cachedScrollHeight = React.useRef(0);\n\n  var onFocus = function onFocus(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onFocus && props.onFocus(event);\n  };\n\n  var onBlur = function onBlur(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onBlur && props.onBlur(event);\n  };\n\n  var onKeyUp = function onKeyUp(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onKeyUp && props.onKeyUp(event);\n  };\n\n  var onInput = function onInput(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onInput && props.onInput(event);\n    var target = event.target;\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n\n  var resize = function resize(initial) {\n    var inputEl = elementRef.current;\n\n    if (inputEl && DomHandler.isVisible(inputEl)) {\n      if (!cachedScrollHeight.current) {\n        cachedScrollHeight.current = inputEl.scrollHeight;\n        inputEl.style.overflow = 'hidden';\n      }\n\n      if (cachedScrollHeight.current !== inputEl.scrollHeight || initial) {\n        inputEl.style.height = '';\n        inputEl.style.height = inputEl.scrollHeight + 'px';\n\n        if (parseFloat(inputEl.style.height) >= parseFloat(inputEl.style.maxHeight)) {\n          inputEl.style.overflowY = 'scroll';\n          inputEl.style.height = inputEl.style.maxHeight;\n        } else {\n          inputEl.style.overflow = 'hidden';\n        }\n\n        cachedScrollHeight.current = inputEl.scrollHeight;\n      }\n    }\n  };\n\n  var currentValue = elementRef.current && elementRef.current.value;\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue) || ObjectUtils.isNotEmpty(currentValue);\n  }, [props.value, props.defaultValue, currentValue]);\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  React.useEffect(function () {\n    if (props.autoResize) {\n      resize(true);\n    }\n  }, [props.autoResize]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var otherProps = ObjectUtils.findDiffKeys(props, InputTextarea.defaultProps);\n  var className = classNames('p-inputtextarea p-inputtext p-component', {\n    'p-disabled': props.disabled,\n    'p-filled': isFilled,\n    'p-inputtextarea-resizable': props.autoResize\n  }, props.className);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    ref: elementRef\n  }, otherProps, {\n    className: className,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onInput: onInput\n  })), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions)));\n}));\nInputTextarea.displayName = 'InputTextarea';\nInputTextarea.defaultProps = {\n  __TYPE: 'InputTextarea',\n  autoResize: false,\n  tooltip: null,\n  tooltipOptions: null,\n  onInput: null\n};\n\nexport { InputTextarea };\n","import React, { useState } from 'react'\nimport { Button } from 'primereact/button';\nimport './careers.css'\nimport { InputText } from \"primereact/inputtext\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { classNames } from \"primereact/utils\";\nimport { Divider } from 'primereact/divider';\nimport { useFormik } from \"formik\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport {  FaMapMarkerAlt, FaIdCard, FaBook, FaBriefcase, FaDollarSign } from \"react-icons/fa\";\n\nconst Careers = () => {\n  const [viewMode, setViewMode] = useState(0);\n  const status = [\n    { name: \"ACTIVE\", code: \"ACT\" },\n    { name: \"INACTIVE\", code: \"IN-ACT\" },\n  ];\n\n  const jobFormik = useFormik({\n    initialValues: {\n      title: \"\",\n      location: \"\",\n      experience: \"\",\n      jobType: \"\",\n      workPlace: \"\",\n      salary: \"\",\n      jobDescription: \"\",\n    },\n    validate: (data) => {\n      let errors = {};\n\n      if (!data.title) {\n        errors.title = \"Please enter job title.\";\n      }\n      if (!data.location) {\n        errors.location = \"Please enter job location.\";\n      }\n      if (!data.experience) {\n        errors.experience = \"Please enter experience.\";\n      }\n      if (!data.workPlace) {\n        errors.workPlace = \"Please select work place.\";\n      }\n      if (!data.jobType) {\n        errors.jobType = \"Please select job type.\";\n      }\n      if (!data.salary) {\n        errors.salary = \"Please enter salary.\";\n      }\n      if (!data.jobDescription) {\n        errors.jobDescription = \"Please enter job description.\";\n      }\n\n      return errors;\n    },\n    onSubmit: (data) => {\n      console.log(\"form submitted !\");\n    },\n  });\n  const isJobFormFieldValid = (name) =>\n    !!(jobFormik.touched[name] && jobFormik.errors[name]);\n  const getJobFormErrorMessage = (name) => {\n    return (\n      isJobFormFieldValid(name) && (\n        <small className=\"p-error\">{jobFormik.errors[name]}</small>\n      )\n    );\n  };\n\n  const jobForm = () => {\n    return (\n      <form onSubmit={jobFormik.handleSubmit}>\n        <div className='mx-3'>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"title\"\n                  value={jobFormik.values.title}\n                  onChange={jobFormik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"title\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"title\">Job Title</label>\n              </span>\n              {getJobFormErrorMessage(\"title\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"location\"\n                  value={jobFormik.values.location}\n                  onChange={jobFormik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"location\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"location\">Job location</label>\n              </span>\n              {getJobFormErrorMessage(\"location\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"experience\"\n                  value={jobFormik.values.experience}\n                  onChange={jobFormik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"experience\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                  suffix=\" Years\"\n                />\n                <label htmlFor=\"experience\">Experience (in years)</label>\n              </span>\n              {getJobFormErrorMessage(\"experience\")}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"jobType\"\n                  inputId=\"dropdown\"\n                  value={jobFormik.values.jobType}\n                  // options={jobType}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"jobType\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"jobType\">Job Type</label>\n              </span>\n              {getJobFormErrorMessage(\"jobType\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"workPlace\"\n                  inputId=\"dropdown\"\n                  value={jobFormik.values.workPlace}\n                  // options={jobType}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"workPlace\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"workPlace\">Work Place</label>\n              </span>\n              {getJobFormErrorMessage(\"workPlace\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"salary\"\n                  value={jobFormik.values.salary}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"salary\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"salary\">Salary</label>\n              </span>\n              {getJobFormErrorMessage(\"salary\")}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-12 col-lg-12 mt-4\">\n              <span className=\"p-float-label\">\n                <InputTextarea\n                  id=\"jobDescription\"\n                  value={jobFormik.values.jobDescription}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"jobDescription\"),\n                    }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"jobDescription\">Job Description</label>\n              </span>\n              {getJobFormErrorMessage(\"jobDescription\")}\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer d-flex justify-content-end my-3 mx-3\">\n          <Button\n            label=\"Add\"\n            type=\"submit\"\n            className=\"bg-primary border-0  p-button-md  btn-color p-button-raised\"\n          />\n          <Button\n            onClick={() => {\n              setViewMode(0);\n              jobFormik.resetForm();\n            }}\n            label={\"Cancel\"}\n            style={{ marginLeft: \"10px\" }}\n            className=\"bg-danger border-0 p-button-md p-button-raised\"\n          />\n        </div>\n      </form>\n    )\n  }\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"row d-flex\">\n        <div className=\"col-lg-8\">\n          <form\n          // onSubmit={searchFormik.handleSubmit}\n          >\n            <div className=\"row gap-lg-0 mt-lg-0\">\n              <div className=\"col-sm-12 col-lg-4 mb-1\">\n                <span className=\"p-input-icon-left w-100\">\n                  <i className=\"pi pi-search\" />\n                  <InputText\n                    // value={globalFilterValue1}\n                    // onChange={onGlobalFilterChange1}\n                    placeholder=\"Search name\"\n                    className=\"p-inputtext-sm w-100\"\n                    optionLabel=\"name\"\n                    optionValue=\"name\"\n                    filter={false}\n                  />\n                </span>\n              </div>\n              <div className=\"col-sm-12 col-lg-4 mb-1\">\n                <Dropdown\n                  id=\"status\"\n                  name=\"status\"\n                  options={status}\n                  // value={searchFormik.values.status}\n                  // onChange={searchFormik.handleChange}\n                  className=\"p-inputtext-sm w-100\"\n                  optionLabel=\"name\"\n                  optionValue=\"name\"\n                  filter={false}\n                  placeholder=\"Status\"\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div\n          className=\"col-sm-12 col-md-12 col-lg-4 d-flex \"\n          style={{ justifyContent: \"right\" }}\n        >\n          <Button\n            label=\"Post a Job\"\n            className=\"p-button-outlined p-button-primary p-button-md\"\n            onClick={() => {\n              setViewMode(1);\n            }}\n          />\n          <Button\n            style={{\n              marginLeft: \"10px\",\n            }}\n            role=\"button\"\n            icon=\"pi pi-filter-slash\"\n            label=\"Clear\"\n            className=\"p-button-outlined p-button-md\"\n          // onClick={() => {\n          //   searchFormik.resetForm();\n          //   initFilters1();\n          //   if (pageNumber !== 1) {\n          //     setPageNumber(1);\n          //   } else {\n          //     getAllAccounts({\n          //       dateRange: null,\n          //       status: \"\",\n          //       page: 1,\n          //     });\n          //   }\n          // }}\n          />\n        </div>\n      </div>\n    );\n  };\n  const header1 = renderHeader1();\n\n  return (\n    <div className='card p-2 pt-3'>\n      {viewMode === 1 ? (jobForm()) : viewMode === 2 ? (\"\") : (\n        <div>\n          <div className='row'>{header1}</div>\n          <Divider />\n          <div className='row'>\n            <div className='col-sm-12 col-md-6 col-lg-6 mt-2'>\n              <div className='card p-3'>\n                <strong className='mx-1 my-2'>Software Developer</strong>\n                <p className='mt-2'>\n                  <span ><FaBriefcase className='text-primary' /> 2-4 Years</span> &nbsp;\n                  <span><FaDollarSign className='text-warning' />4-6 LPA</span> &nbsp; &nbsp;\n                  <span><FaMapMarkerAlt className='text-danger' /> Hybrid</span>\n                </p>\n                <p>\n                  <span><FaBook className='text-primary' /> </span>\n                  <span>Looking for Smart Software Engineer, having rich exp…..</span>\n                </p>\n                <p>\n                  <span><FaIdCard className='text-primary' /> </span>\n                  <span>Java, JavaScript, HTML, MySQL, Python</span>\n                </p>\n\n              </div>\n            </div>\n            <div className='col-sm-12 col-md-6 col-lg-6 mt-2'>\n              <div className='card p-3'>\n                <strong className='mx-1 my-2'> Maths Teacher</strong>\n                <p className='mt-2'>\n                  <span ><FaBriefcase className='text-primary' /> 3-6 Years</span> &nbsp;\n                  <span><FaDollarSign className='text-warning' />6-8 LPA</span> &nbsp; &nbsp;\n                  <span><FaMapMarkerAlt className='text-danger' /> On Site</span>\n                </p>\n                <p>\n                  <span><FaBook className='text-primary' /> </span>\n                  <span>Looking for Smart and experience, having rich ...</span>\n                </p>\n                <p>\n                  {/* <span><FaIdCard className='text-primary' /> </span> */}\n                  {/* <span>Java, JavaScript, HTML, MySQL, Python</span> */}\n                </p>\n\n              </div>\n            </div>\n            <div className='col-sm-12 col-md-6 col-lg-6 mt-2'>\n              <div className='card p-3'>\n                <strong className='mx-1 my-2'>Accountent</strong>\n                <p className='mt-2'>\n                  <span ><FaBriefcase className='text-primary' /> 1-3 Years</span> &nbsp;\n                  <span><FaDollarSign className='text-warning' />6-10  LPA</span> &nbsp; &nbsp;\n                  <span><FaMapMarkerAlt className='text-danger' /> On Site</span>\n                </p>\n                <p>\n                  <span><FaBook className='text-primary' /> </span>\n                  <span>Looking for Accountent, having rich exp…..</span>\n                </p>\n                <p>\n                  {/* <span><FaIdCard className='text-primary' /> </span> */}\n                  {/* <span>Java, JavaScript, HTML, MySQL, Python</span> */}\n                </p>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Careers","import * as React from 'react';\nimport { ObjectUtils, classNames } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar Divider = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var elementRef = React.useRef(null);\n  var horizontal = props.layout === 'horizontal';\n  var vertical = props.layout === 'vertical';\n  var otherProps = ObjectUtils.findDiffKeys(props, Divider.defaultProps);\n  var className = classNames(\"p-divider p-component p-divider-\".concat(props.layout, \" p-divider-\").concat(props.type), {\n    'p-divider-left': horizontal && (!props.align || props.align === 'left'),\n    'p-divider-right': horizontal && props.align === 'right',\n    'p-divider-center': horizontal && props.align === 'center' || vertical && (!props.align || props.align === 'center'),\n    'p-divider-top': vertical && props.align === 'top',\n    'p-divider-bottom': vertical && props.align === 'bottom'\n  }, props.className);\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: elementRef,\n    className: className,\n    style: props.style,\n    role: \"separator\"\n  }, otherProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-divider-content\"\n  }, props.children));\n});\nDivider.displayName = 'Divider';\nDivider.defaultProps = {\n  __TYPE: 'Divider',\n  align: null,\n  layout: 'horizontal',\n  type: 'solid',\n  style: null,\n  className: null\n};\n\nexport { Divider };\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","InputTextarea","React","props","ref","elementRef","cachedScrollHeight","resize","initial","inputEl","current","DomHandler","scrollHeight","style","overflow","height","parseFloat","maxHeight","overflowY","currentValue","value","isFilled","ObjectUtils","defaultValue","autoResize","hasTooltip","tooltip","otherProps","defaultProps","className","classNames","disabled","onFocus","event","onBlur","onKeyUp","onInput","Tooltip","content","tooltipOptions","displayName","__TYPE","useState","viewMode","setViewMode","status","name","code","jobFormik","useFormik","initialValues","title","location","experience","jobType","workPlace","salary","jobDescription","validate","data","errors","onSubmit","console","log","isJobFormFieldValid","touched","getJobFormErrorMessage","header1","placeholder","optionLabel","optionValue","filter","id","options","justifyContent","label","onClick","marginLeft","role","icon","handleSubmit","values","onChange","handleChange","htmlFor","suffix","inputId","type","resetForm","Divider","horizontal","layout","vertical","concat","align","getElement","children"],"sourceRoot":""}