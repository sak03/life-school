{"version":3,"file":"static/js/608.8ebfae01.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/primereact/password/password.esm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport logo from \"../../../assets/images/AceScan_logo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { classNames } from \"primereact/utils\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Password } from 'primereact/password';\nimport './login.css'\nexport let userMode;\nexport let userModeValue;\n\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const hardcodedCred = {\n    platFormAdmin: {\n      email: 'sartaj@testmail.com',\n      password: 'Admin@123'\n    },\n    accountAdmin: {\n      email: 'pooja@testmail.com',\n      password: 'Admin@123'\n    },\n    customerAdmin: {\n      email: 'sonu@testmail.com',\n      password: 'Admin@123'\n    },\n    candidateAdmin: {\n      email: 'pramod@testmail.com',\n      password: 'Admin'\n    }\n  }\n\n  const loginFormik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate: (data) => {\n      let errors = {};\n\n      if (!data.email) {\n        errors.email = \"Please enter username or email.\";\n      }\n      if (!data.password) {\n        errors.password = \"Please enter password.\";\n      }\n\n      return errors;\n    },\n    onSubmit: (data) => {\n      // data.preventDefault();\n      if ((data.email === hardcodedCred.platFormAdmin.email) && (data.password === hardcodedCred.platFormAdmin.password)) {\n        //combination is good. Log them in.\n        //this token can be anything. You can use random.org to generate a random string;\n        // const token = '123456abcdef';\n        // sessionStorage.setItem('auth-token', token);\n        //go to www.website.com/dashboard\n        userMode = 1;\n        // setLoggedUserMode(1)\n        navigate(\"/dashboard\");\n\n      } else if ((data.email === hardcodedCred.accountAdmin.email) && (data.password === hardcodedCred.accountAdmin.password)) {\n        userMode = 2;\n        // setLoggedUserMode(2)\n        navigate(\"/dashboard\");\n      }\n      else if ((data.email === hardcodedCred.customerAdmin.email) && (data.password === hardcodedCred.customerAdmin.password)) {\n        userMode = 3;\n        // setLoggedUserMode(3)\n        navigate(\"/dashboard\");\n      }\n      else {\n        alert('Wrong email or password combination');\n        console.log(hardcodedCred.platFormAdmin.email, hardcodedCred.platFormAdmin.password);\n      }\n      localStorage.setItem(\"userMode\", userMode);\n      // userModeValue = localStorage.getItem('userMode');\n      // console.log(userModeValue, \">>login userModeValue\")\n      return false;\n    },\n  });\n  const isLoginFormFieldValid = (name) =>\n    !!(loginFormik.touched[name] && loginFormik.errors[name]);\n  const getLoginFormErrorMessage = (name) => {\n    return (\n      isLoginFormFieldValid(name) && (\n        <small className=\"p-error\">{loginFormik.errors[name]}</small>\n      )\n    );\n  };\n\n  return (\n    <>\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n        <div\n          className=\"login-logo\"\n          style={{ position: \"absolute\", top: \"2rem\", left: \"2rem\" }}\n        >\n          <a href=\"http://www.acescan.co/\" target=\"blank\" placeholder=\"visit\">\n            <img src={logo} alt=\"login\" />\n          </a>\n        </div>\n        <CContainer>\n          <CRow className=\"justify-content-center border-0\">\n            <div className=\"card p-4 col-lg-4 border-0 shadow-lg\">\n              <div className=\"row\">\n                <form onSubmit={loginFormik.handleSubmit}>\n                  <div className=\" col-sm-12 col-md-4 col-lg-12 mt-4\">\n                    <span className=\"p-float-label\">\n                      <InputText\n                        id=\"email\"\n                        value={loginFormik.values.email}\n                        onChange={loginFormik.handleChange}\n                        className={\n                          (classNames({\n                            \"p-invalid\": isLoginFormFieldValid(\"email\"),\n                          }),\n                            \"p-inputtext-sm w-100 borderClass\")\n                        }\n                      />\n                      <label htmlFor=\"email\">Username</label>\n                    </span>\n                    {getLoginFormErrorMessage(\"email\")}\n                  </div>\n                  <div className=\" col-sm-12 col-md-12 col-lg-12 mt-4\">\n                    <span className=\"p-float-label\">\n                      <Password\n                        id=\"password\"\n                        inputId=\"password\"\n                        value={loginFormik.values.password}\n                        onChange={loginFormik.handleChange}\n                        className={\n                          (classNames({\n                            \"p-invalid\": isLoginFormFieldValid(\"password\"),\n                          }),\n                            \"p-inputtext-sm w-100 borderClass\")\n                        }\n                        toggleMask\n                        feedback={false}\n                      />\n                      <label htmlFor=\"password\">Password</label>\n                    </span>\n                    {getLoginFormErrorMessage(\"password\")}\n                  </div>\n                  <div className=\"text-right mt-2 mb-4\">\n                    <span\n                      className=\"mx-2 text-primary\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      Forgot password?\n                    </span>\n                  </div>\n                  <CRow>\n                    <CCol xs={12}>\n                      <CButton\n                        type=\"submit\"\n                        color=\"primary\"\n                        className=\"px-4 w-100\"\n                      >\n                        Login\n                      </CButton>\n                    </CCol>\n                  </CRow>\n                  <div className=\"text-right mt-3\">\n                    <p>\n                      Don't have an account ?\n                      <span className=\"mx-2\">\n                        <Link to='/register' style={{ textDecoration: \"none\" }}>Sign Up</Link>\n\n                      </span>\n                    </p>\n                  </div>\n                </form>\n              </div>\n            </div>\n            {/* <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n          </CRow>\n        </CContainer>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import * as React from 'react';\nimport PrimeReact, { localeOption } from 'primereact/api';\nimport { CSSTransition } from 'primereact/csstransition';\nimport { useOverlayListener, useUnmountEffect } from 'primereact/hooks';\nimport { InputText } from 'primereact/inputtext';\nimport { OverlayService } from 'primereact/overlayservice';\nimport { Portal } from 'primereact/portal';\nimport { ObjectUtils, DomHandler, ZIndexUtils, classNames } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar Password = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var promptLabel = props.promptLabel || localeOption('passwordPrompt');\n  var weakLabel = props.weakLabel || localeOption('weak');\n  var mediumLabel = props.mediumLabel || localeOption('medium');\n  var strongLabel = props.strongLabel || localeOption('strong');\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      overlayVisibleState = _React$useState2[0],\n      setOverlayVisibleState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      meterState = _React$useState4[0],\n      setMeterState = _React$useState4[1];\n\n  var _React$useState5 = React.useState(promptLabel),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      infoTextState = _React$useState6[0],\n      setInfoTextState = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      focusedState = _React$useState8[0],\n      setFocusedState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      unmaskedState = _React$useState10[0],\n      setUnmaskedState = _React$useState10[1];\n\n  var elementRef = React.useRef(null);\n  var overlayRef = React.useRef(null);\n  var inputRef = React.useRef(props.inputRef);\n  var mediumCheckRegExp = React.useRef(new RegExp(props.mediumRegex));\n  var strongCheckRegExp = React.useRef(new RegExp(props.strongRegex));\n  var type = unmaskedState ? 'text' : 'password';\n\n  var _useOverlayListener = useOverlayListener({\n    target: elementRef,\n    overlay: overlayRef,\n    listener: function listener(event, _ref) {\n      var valid = _ref.valid;\n      valid && hide();\n    },\n    when: overlayVisibleState\n  }),\n      _useOverlayListener2 = _slicedToArray(_useOverlayListener, 2),\n      bindOverlayListener = _useOverlayListener2[0],\n      unbindOverlayListener = _useOverlayListener2[1];\n\n  var currentValue = inputRef.current && inputRef.current.value;\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue) || ObjectUtils.isNotEmpty(currentValue);\n  }, [props.value, props.defaultValue, currentValue]);\n\n  var updateLabels = function updateLabels() {\n    if (meterState) {\n      var label = null;\n\n      switch (meterState.strength) {\n        case 'weak':\n          label = weakLabel;\n          break;\n\n        case 'medium':\n          label = mediumLabel;\n          break;\n\n        case 'strong':\n          label = strongLabel;\n          break;\n      }\n\n      if (label && infoTextState !== label) {\n        setInfoTextState(label);\n      }\n    } else {\n      if (infoTextState !== promptLabel) {\n        setInfoTextState(promptLabel);\n      }\n    }\n  };\n\n  var onPanelClick = function onPanelClick(event) {\n    if (props.feedback) {\n      OverlayService.emit('overlay-click', {\n        originalEvent: event,\n        target: elementRef.current\n      });\n    }\n  };\n\n  var onMaskToggle = function onMaskToggle() {\n    setUnmaskedState(function (prevUnmasked) {\n      return !prevUnmasked;\n    });\n  };\n\n  var show = function show() {\n    updateLabels();\n    setOverlayVisibleState(true);\n  };\n\n  var hide = function hide() {\n    setOverlayVisibleState(false);\n  };\n\n  var alignOverlay = function alignOverlay() {\n    if (inputRef.current) {\n      DomHandler.alignOverlay(overlayRef.current, inputRef.current.parentElement, props.appendTo || PrimeReact.appendTo);\n    }\n  };\n\n  var onOverlayEnter = function onOverlayEnter() {\n    ZIndexUtils.set('overlay', overlayRef.current, PrimeReact.autoZIndex, PrimeReact.zIndex['overlay']);\n    alignOverlay();\n  };\n\n  var onOverlayEntered = function onOverlayEntered() {\n    bindOverlayListener();\n    props.onShow && props.onShow();\n  };\n\n  var onOverlayExit = function onOverlayExit() {\n    unbindOverlayListener();\n  };\n\n  var onOverlayExited = function onOverlayExited() {\n    ZIndexUtils.clear(overlayRef.current);\n    props.onHide && props.onHide();\n  };\n\n  var onFocus = function onFocus(event) {\n    setFocusedState(true);\n\n    if (props.feedback) {\n      show();\n    }\n\n    props.onFocus && props.onFocus(event);\n  };\n\n  var onBlur = function onBlur(event) {\n    setFocusedState(false);\n\n    if (props.feedback) {\n      hide();\n    }\n\n    props.onBlur && props.onBlur(event);\n  };\n\n  var onKeyup = function onKeyup(e) {\n    var keyCode = e.keyCode || e.which;\n\n    if (props.feedback) {\n      var value = e.target.value;\n      var label = null;\n      var meter = null;\n\n      switch (testStrength(value)) {\n        case 1:\n          label = weakLabel;\n          meter = {\n            strength: 'weak',\n            width: '33.33%'\n          };\n          break;\n\n        case 2:\n          label = mediumLabel;\n          meter = {\n            strength: 'medium',\n            width: '66.66%'\n          };\n          break;\n\n        case 3:\n          label = strongLabel;\n          meter = {\n            strength: 'strong',\n            width: '100%'\n          };\n          break;\n\n        default:\n          label = promptLabel;\n          meter = null;\n          break;\n      }\n\n      setMeterState(meter);\n      setInfoTextState(label);\n\n      if (!!keyCode && !overlayVisibleState) {\n        show();\n      }\n    }\n\n    props.onKeyUp && props.onKeyUp(e);\n  };\n\n  var onInput = function onInput(event, validatePattern) {\n    if (props.onInput) {\n      props.onInput(event, validatePattern);\n    }\n\n    if (!props.onChange) {\n      ObjectUtils.isNotEmpty(event.target.value) ? DomHandler.addClass(elementRef.current, 'p-inputwrapper-filled') : DomHandler.removeClass(elementRef.current, 'p-inputwrapper-filled');\n    }\n  };\n\n  var testStrength = function testStrength(str) {\n    if (strongCheckRegExp.current.test(str)) return 3;else if (mediumCheckRegExp.current.test(str)) return 2;else if (str.length) return 1;\n    return 0;\n  };\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      },\n      getOverlay: function getOverlay() {\n        return overlayRef.current;\n      },\n      getInput: function getInput() {\n        return inputRef.current;\n      }\n    };\n  });\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(inputRef, props.inputRef);\n  }, [inputRef, props.inputRef]);\n  React.useEffect(function () {\n    mediumCheckRegExp.current = new RegExp(props.mediumRegex);\n  }, [props.mediumRegex]);\n  React.useEffect(function () {\n    strongCheckRegExp.current = new RegExp(props.strongRegex);\n  }, [props.strongRegex]);\n  React.useEffect(function () {\n    if (!isFilled && DomHandler.hasClass(elementRef.current, 'p-inputwrapper-filled')) {\n      DomHandler.removeClass(elementRef.current, 'p-inputwrapper-filled');\n    }\n  }, [isFilled]);\n  useUnmountEffect(function () {\n    ZIndexUtils.clear(overlayRef.current);\n  });\n\n  var createIcon = function createIcon() {\n    if (props.toggleMask) {\n      var iconClassName = unmaskedState ? 'pi pi-eye-slash' : 'pi pi-eye';\n      var content = /*#__PURE__*/React.createElement(\"i\", {\n        className: iconClassName,\n        onClick: onMaskToggle\n      });\n\n      if (props.icon) {\n        var defaultIconOptions = {\n          onClick: onMaskToggle,\n          className: iconClassName,\n          element: content,\n          props: props\n        };\n        content = ObjectUtils.getJSXElement(props.icon, defaultIconOptions);\n      }\n\n      return content;\n    }\n\n    return null;\n  };\n\n  var createPanel = function createPanel() {\n    var panelClassName = classNames('p-password-panel p-component', props.panelClassName);\n\n    var _ref2 = meterState || {\n      strength: '',\n      width: '0%'\n    },\n        strength = _ref2.strength,\n        width = _ref2.width;\n\n    var header = ObjectUtils.getJSXElement(props.header, props);\n    var footer = ObjectUtils.getJSXElement(props.footer, props);\n    var content = props.content ? ObjectUtils.getJSXElement(props.content, props) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-password-meter\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-password-strength \".concat(strength),\n      style: {\n        width: width\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-password-info \".concat(strength)\n    }, infoTextState));\n    var panel = /*#__PURE__*/React.createElement(CSSTransition, {\n      nodeRef: overlayRef,\n      classNames: \"p-connected-overlay\",\n      \"in\": overlayVisibleState,\n      timeout: {\n        enter: 120,\n        exit: 100\n      },\n      options: props.transitionOptions,\n      unmountOnExit: true,\n      onEnter: onOverlayEnter,\n      onEntered: onOverlayEntered,\n      onExit: onOverlayExit,\n      onExited: onOverlayExited\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: overlayRef,\n      className: panelClassName,\n      style: props.panelStyle,\n      onClick: onPanelClick\n    }, header, content, footer));\n    return /*#__PURE__*/React.createElement(Portal, {\n      element: panel,\n      appendTo: props.appendTo\n    });\n  };\n\n  var className = classNames('p-password p-component p-inputwrapper', {\n    'p-inputwrapper-filled': isFilled,\n    'p-inputwrapper-focus': focusedState,\n    'p-input-icon-right': props.toggleMask\n  }, props.className);\n  var inputClassName = classNames('p-password-input', props.inputClassName);\n  var inputProps = ObjectUtils.findDiffKeys(props, Password.defaultProps);\n  var icon = createIcon();\n  var panel = createPanel();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: elementRef,\n    id: props.id,\n    className: className,\n    style: props.style\n  }, /*#__PURE__*/React.createElement(InputText, _extends({\n    ref: inputRef,\n    id: props.inputId\n  }, inputProps, {\n    type: type,\n    className: inputClassName,\n    style: props.inputStyle,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyUp: onKeyup,\n    onInput: onInput,\n    tooltip: props.tooltip,\n    tooltipOptions: props.tooltipOptions\n  })), icon, panel);\n}));\nPassword.displayName = 'Password';\nPassword.defaultProps = {\n  __TYPE: 'Password',\n  id: null,\n  inputId: null,\n  inputRef: null,\n  promptLabel: null,\n  weakLabel: null,\n  mediumLabel: null,\n  strongLabel: null,\n  mediumRegex: '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})',\n  strongRegex: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})',\n  feedback: true,\n  toggleMask: false,\n  appendTo: null,\n  header: null,\n  content: null,\n  footer: null,\n  icon: null,\n  tooltip: null,\n  tooltipOptions: null,\n  style: null,\n  className: null,\n  inputStyle: null,\n  inputClassName: null,\n  panelStyle: null,\n  panelClassName: null,\n  transitionOptions: null,\n  onInput: null,\n  onShow: null,\n  onHide: null\n};\n\nexport { Password };\n"],"names":["userMode","navigate","useNavigate","hardcodedCred","email","password","loginFormik","useFormik","initialValues","validate","data","errors","onSubmit","alert","console","log","localStorage","setItem","isLoginFormFieldValid","name","touched","getLoginFormErrorMessage","className","style","position","top","left","href","target","placeholder","src","logo","alt","handleSubmit","id","value","values","onChange","handleChange","classNames","htmlFor","inputId","toggleMask","feedback","cursor","xs","type","color","to","textDecoration","_extends","Object","assign","bind","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","_iterableToArrayLimit","o","minLen","n","toString","slice","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","Password","React","props","ref","promptLabel","localeOption","weakLabel","mediumLabel","strongLabel","_React$useState2","overlayVisibleState","setOverlayVisibleState","_React$useState4","meterState","setMeterState","_React$useState6","infoTextState","setInfoTextState","_React$useState8","focusedState","setFocusedState","_React$useState10","unmaskedState","setUnmaskedState","elementRef","overlayRef","inputRef","mediumCheckRegExp","RegExp","mediumRegex","strongCheckRegExp","strongRegex","_useOverlayListener2","useOverlayListener","overlay","listener","event","_ref","valid","hide","when","bindOverlayListener","unbindOverlayListener","currentValue","current","isFilled","ObjectUtils","defaultValue","onPanelClick","OverlayService","originalEvent","onMaskToggle","prevUnmasked","show","label","strength","updateLabels","onOverlayEnter","ZIndexUtils","PrimeReact","DomHandler","parentElement","appendTo","onOverlayEntered","onShow","onOverlayExit","onOverlayExited","onHide","testStrength","str","getElement","getOverlay","getInput","useUnmountEffect","inputClassName","inputProps","defaultProps","icon","iconClassName","content","onClick","defaultIconOptions","element","createIcon","panel","panelClassName","_ref2","width","header","footer","concat","CSSTransition","nodeRef","timeout","enter","exit","options","transitionOptions","unmountOnExit","onEnter","onEntered","onExit","onExited","panelStyle","Portal","createPanel","InputText","inputStyle","onFocus","onBlur","onKeyUp","e","keyCode","which","meter","onInput","validatePattern","tooltip","tooltipOptions","displayName","__TYPE"],"sourceRoot":""}