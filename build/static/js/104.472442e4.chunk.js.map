{"version":3,"file":"static/js/104.472442e4.chunk.js","mappings":"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","sources":["views/admin/communications/events/Events.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { classNames } from \"primereact/utils\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { Calendar } from \"primereact/calendar\";\nimport { CTooltip } from \"@coreui/react\";\n\nconst Events = () => {\n  const status = [\n    { name: \"ACTIVE\", code: \"ACT\" },\n    { name: \"INACTIVE\", code: \"IN-ACT\" },\n  ];\n\n  const [logData, setLogData] = useState([\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Single Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Inactive\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Single Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Inactive\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Single Aplicant\",\n      language: \"sp\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Inactive\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Single Aplicant\",\n      language: \"sp\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Inactive\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Single Aplicant\",\n      language: \"zn\",\n      date: \"22 Oct, 2022\",\n      status: \"Inactive\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Single Aplicant\",\n      language: \"hn\",\n      date: \"22 Oct, 2022\",\n      status: \"Inactive\",\n    },\n    {\n      event: \"account\",\n      catagory: \"Multi Aplicant\",\n      language: \"en\",\n      date: \"22 Oct, 2022\",\n      status: \"Active\",\n    },\n  ])\n\n  // ============Edit button for update form===========//\n  const getActionuttons = (rowdata) => {\n    return (\n      <CTooltip content=\"Edit\" placement=\"right\">\n        <span>\n          <FaEdit\n            className=\"act-btn\"\n            style={{ color: \"#6777ef\", cursor: \"pointer\" }}\n            onClick={() => { }}\n          />\n        </span>\n      </CTooltip>\n    );\n  };\n\n  // ============Code for get Status==========//\n  const getStatus = (rowdata) => {\n    return (\n      <span\n        // onClick={(event) => statusConfirmation(event, rowdata)}\n        className={\n          rowdata.status === \"Active\" ? \"badge bg-success\" : \"badge bg-danger\"\n        }\n      >\n        {rowdata.status}\n      </span>\n    );\n  };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"row d-flex\">\n        <div className=\"col-lg-8\">\n          <form\n          // onSubmit={searchFormik.handleSubmit}\n          >\n            <div className=\"row gap-lg-0 mt-lg-0\">\n              <div className=\"col-sm-12 col-lg-4 mb-1\">\n                <span className=\"p-input-icon-left w-100\">\n                  <i className=\"pi pi-search\" />\n                  <InputText\n                    // value={globalFilterValue1}\n                    // onChange={onGlobalFilterChange1}\n                    placeholder=\"Search name\"\n                    className=\"p-inputtext-sm w-100\"\n                    optionLabel=\"name\"\n                    optionValue=\"name\"\n                    filter={false}\n                  />\n                </span>\n              </div>\n              <div className=\"col-sm-12 col-lg-4 mb-1\">\n                <Dropdown\n                  id=\"status\"\n                  name=\"status\"\n                  options={status}\n                  // value={searchFormik.values.status}\n                  // onChange={searchFormik.handleChange}\n                  className=\"p-inputtext-sm w-100\"\n                  optionLabel=\"name\"\n                  optionValue=\"name\"\n                  filter={false}\n                  placeholder=\"Status\"\n                />\n              </div>\n              <div className=\"col-sm-12 col-lg-4 mb-2\">\n                <Calendar\n                  id=\"dateRange\"\n                  name=\"dateRange\"\n                  // value={searchFormik.values.dateRange}\n                  // onChange={searchFormik.handleChange}\n                  selectionMode=\"range\"\n                  // maxDate={maxDate}\n                  readOnlyInput\n                  placeholder=\"Start & End date\"\n                  className=\"p-inputtext-sm p-calendar-w-btn w-100\"\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div\n          className=\"col-sm-12 col-md-12 col-lg-4 d-flex \"\n          style={{ justifyContent: \"right\" }}\n        >\n          <Button\n            label=\"Add Event\"\n            className=\"p-button-outlined p-button-primary p-button-md\"\n            onClick={() => {\n              // setFormMode(0);\n              // formik.setFieldValue(\"accountType\", \"\");\n              // formik.setFieldValue(\"accountName\", \"\");\n              // setFormupdateMode(true);\n              // formik.setFieldValue(\"accountType\", \"SINGLE_TENANT\");\n            }}\n          />\n          <Button\n            style={{\n              marginLeft: \"10px\",\n            }}\n            type=\"button\"\n            icon=\"pi pi-filter-slash\"\n            label=\"Clear\"\n            className=\"p-button-outlined p-button-md\"\n          // onClick={() => {\n          //   searchFormik.resetForm();\n          //   initFilters1();\n          //   if (pageNumber !== 1) {\n          //     setPageNumber(1);\n          //   } else {\n          //     getAllAccounts({\n          //       dateRange: null,\n          //       status: \"\",\n          //       page: 1,\n          //     });\n          //   }\n          // }}\n          />\n        </div>\n      </div>\n    );\n  };\n  const header1 = renderHeader1();\n  return (\n    <div className=\"row mb-2 mx-1\">\n      <div className=\"card\">\n        <div className=\"col-sm-12 rounded\">\n          {/* <div className=\"cl-body\"> */}\n          <DataTable\n            value={logData}\n            responsiveLayout=\"scroll\"\n            className=\"p-datatable-customers\"\n            showGridlines={false}\n            rows={10}\n            stripedRows\n            dataKey=\"id\"\n            paginator\n            // filters={filters1}\n            // loading={accountLoading}\n            filterDisplay=\"menu\"\n            globalFilterFields={[\n              \"event\",\n              \"catagory\",\n              \"language\",\n              \"date\",\n              \"status\",\n            ]}\n            header={header1}\n            emptyMessage=\"No events found.\"\n          >\n            <Column\n              field=\"event\"\n              header=\"Event\"\n              sortable\n            ></Column>\n            <Column field=\"catagory\" header=\"Catagory\" sortable></Column>\n            <Column\n              header=\"Language\"\n              field=\"language\"\n              sortable\n            ></Column>\n            <Column\n              field=\"date\"\n              header=\"Date\"\n              sortable\n            ></Column>\n            <Column\n              field=\"status\"\n              header=\"Status\"\n              body={getStatus}\n              sortable\n            ></Column>\n            <Column\n              field=\"\"\n              header=\"Actions\"\n              body={getActionuttons}\n            ></Column>\n          </DataTable>\n        </div>\n        {/* </div> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Events"],"names":["status","name","code","useState","event","catagory","language","date","logData","header1","className","placeholder","optionLabel","optionValue","filter","id","options","selectionMode","readOnlyInput","style","justifyContent","label","onClick","marginLeft","type","icon","value","responsiveLayout","showGridlines","rows","stripedRows","dataKey","paginator","filterDisplay","globalFilterFields","header","emptyMessage","field","sortable","body","rowdata","content","placement","color","cursor"],"sourceRoot":""}