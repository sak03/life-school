{"version":3,"file":"static/js/87.9b56b93f.chunk.js","mappings":"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","sources":["constants/constants.js","views/admin/customers/Customers.js"],"sourcesContent":["export const AppConstants = {\n    Api_BaseUrl: \"http://192.168.1.192/api/v1/\"\n}","import React, { useEffect, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { classNames } from \"primereact/utils\";\nimport { FaEdit, FaRegTrashAlt } from \"react-icons/fa\";\nimport { CTooltip } from \"@coreui/react\";\nimport { Divider } from \"primereact/divider\";\nimport { useFormik } from \"formik\";\nimport \"./customers.css\";\nimport {\n  FaEnvelope,\n  FaPhoneAlt,\n  FaMapMarkerAlt,\n  FaFileInvoice,\n  FaBuilding,\n  FaIdCard,\n  FaCloudUploadAlt,\n  FaBook,\n  FaBriefcase,\n  FaDollarSign,\n} from \"react-icons/fa\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport axios from \"axios\";\nimport { AppConstants } from \"src/constants/constants\";\nexport let customersList;\n\nconst Customers = () => {\n  const [viewMode, setViewMode] = useState(0);\n  const [showspinner, setshowspinner] = useState(false);\n  const [editMode, setEditMode] = useState(0);\n  const [switchChecked, setSwitchChecked] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [checkedTax, setCheckedTax] = useState(false);\n  const [customerData, setCustomerData] = useState(null);\n\n  const language = [\n    { name: \"en\", code: \"EN\" },\n    { name: \"hi\", code: \"HI\" },\n    { name: \"zn\", code: \"CN\" },\n    { name: \"es\", code: \"ES\" },\n  ];\n  const skills = [\n    { name: \"Java\", code: \"JV\" },\n    { name: \"JAvaScripr\", code: \"JS\" },\n    { name: \"React\", code: \"RC\" },\n    { name: \"Angular\", code: \"AG\" },\n    { name: \"C#\", code: \"CS\" },\n    { name: \"PHP\", code: \"PH\" },\n  ];\n  const ContractType = [\n    { name: \"Permanent\" },\n    { name: \"Contractual\" },\n    { name: \"Both\" },\n  ];\n  const EngagementType = [\n    { name: \"Contractual\" },\n    { name: \"Contract to Hire\" },\n  ];\n  const Days = [\n    { name: \"1\" },\n    { name: \"2\" },\n    { name: \"3\" },\n    { name: \"4\" },\n    { name: \"5\" },\n    { name: \"6\" },\n    { name: \"7\" },\n    { name: \"8\" },\n    { name: \"9\" },\n    { name: \"10\" },\n    { name: \"11 \" },\n    { name: \"12\" },\n    { name: \"13 \" },\n    { name: \"14\" },\n    { name: \"15 \" },\n    { name: \"16\" },\n    { name: \"17 \" },\n    { name: \"18\" },\n    { name: \"19 \" },\n    { name: \"20\" },\n    { name: \"21\" },\n    { name: \"22\" },\n    { name: \"23\" },\n    { name: \"24\" },\n    { name: \"25\" },\n    { name: \"26\" },\n    { name: \"27\" },\n    { name: \"28\" },\n    { name: \"29\" },\n    { name: \"30\" },\n  ];\n\n  const ContractStage = [{ name: \"Prospect\" }, { name: \"Signed\" }];\n  const expData = [\n    {\n      jobRole: \"Software Engineer\",\n      jobType: \"Full time\",\n      period: \"Mar 2019 - Present\",\n      workedOn: \"Web application\",\n    },\n    {\n      jobRole: \"Associate Software Engineer\",\n      jobType: \"Full time\",\n      period: \"Aug - 2014 - Mar 2019\",\n      workedOn: \"Web building\",\n    },\n    {\n      jobRole: \"Software Engineer\",\n      jobType: \"Internship\",\n      period: \"Mar 2014 - Aug 2014\",\n      workedOn: \"Static website\",\n    },\n  ];\n  const digreeData = [\n    {\n      degree: \"Bachelor's\",\n      field_study: \"Computer Science\",\n      institute_name: \"DTU Delhi\",\n      marks: \"8.5/10\",\n    },\n    {\n      degree: \"Intermidiate\",\n      field_study: \"Maths, Physics & Chemistry\",\n      institute_name: \"Delhi Public School\",\n      marks: \"7.5/10\",\n    },\n    {\n      degree: \"Matriculation\",\n      field_study: \"--\",\n      institute_name: \"Delhi Public School\",\n      marks: \"9.5/10\",\n    },\n  ];\n  const certificationData = [\n    {\n      certificate: \"GSTIN\",\n      issueBy: \"Ministry of Finance, New Delhi\",\n      issuedate: \"Jun 2011\",\n      certificateNo: \"2011APTK56479\",\n    },\n    {\n      certificate: \"Company PAN card\",\n      issueBy: \"Income Tax Department\",\n      issuedate: \"Mar 2012\",\n      certificateNo: \"2012SRVH34409\",\n    },\n    {\n      certificate: \"TIN number\",\n      issueBy: \"Income Tax Department\",\n      issuedate: \"Dec 2015\",\n      certificateNo: \"2015KHTB45987\",\n    },\n  ];\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  // form validation for adding customer\n  const addfFrmik = useFormik({\n    initialValues: {\n      status: \"\",\n      companyName: \"\",\n      contractStage: \"\",\n      contractType: \"\",\n      taxId: \"\",\n\n      contactPerson: [\n        {\n          contactName: \"\",\n          contactEmail: \"\",\n          contactPhone: \"\",\n        },\n      ],\n      permanentMutiple: false,\n      permanentService: [\n        {\n          serviceFee1: \"\",\n          serviceUpto: \"\",\n        },\n      ],\n      contractualMultiple: false,\n      contractualService: [\n        {\n          margin1: \"\",\n          engagementType1: \"\",\n        },\n      ],\n      paymentCycle: \"\",\n      paymentCycle1: \"\",\n      panNo: \"\",\n      gstNo1: \"\",\n      gstNo2: \"\",\n\n      line1: \"\",\n      line2: \"\",\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      zipcode: \"\",\n\n      line11: \"\",\n      line21: \"\",\n      country1: \"\",\n      state1: \"\",\n      city1: \"\",\n      zipcode1: \"\",\n      contractUpload: \"\",\n      contractUploadName: \"\",\n    },\n    validate: (data) => {\n      let errors = {};\n      console.log(\"validation data\", data.contactPerson);\n      if (!data.companyName) {\n        errors.companyName = \"Please enter company name.\";\n      }\n      if (!data.contractStage) {\n        errors.contractStage = \"Please select contract stage.\";\n      }\n      if (!data.contractType) {\n        errors.contractType = \"Please select contract type.\";\n      }\n      if (!data.taxId) {\n        errors.taxId = \"Please enter tex Id\";\n      }\n      //========================================================================\n      if (data.contactPerson.length) {\n        data?.contactPerson?.forEach((_, index) => {\n          console.log(\n            \"hgfhgdgfhzfsdfsdfhgvhj\",\n            contactPerson[index].contactName\n          );\n\n          if (!contactPerson[index].contactName) {\n            errors.contactPerson[index].contactName =\n              \"Please enter address line 1.\";\n          }\n          if (!contactPerson[index].contactEmail) {\n            errors.contactPerson[index].contactEmail =\n              \"Please enter address line 1.\";\n          }\n          if (!contactPerson[index].contactPhone) {\n            errors.contactPerson[index].contactPhone =\n              \"Please enter address line 1.\";\n          }\n        });\n      }\n      // ========================================================================\n      if (!data.line1) {\n        errors.line1 = \"Please enter address line 1.\";\n      }\n      if (!data.line2) {\n        errors.line2 = \"Please enter address line 2.\";\n      }\n      if (!data.country) {\n        errors.country = \"Please select country.\";\n      }\n      if (!data.state) {\n        errors.state = \"Please select state\";\n      }\n      if (!data.city) {\n        errors.city = \"Please select city\";\n      }\n      if (!data.zipcode) {\n        errors.zipcode = \"Please enter zip code\";\n      }\n      // =======================================================================\n      if (!data.line11) {\n        errors.line11 = \"Please enter address line 1.\";\n      }\n      if (!data.line21) {\n        errors.line21 = \"Please enter address line 2.\";\n      }\n      if (!data.country1) {\n        errors.country1 = \"Please select country.\";\n      }\n      if (!data.state1) {\n        errors.state1 = \"Please select state\";\n      }\n      if (!data.city1) {\n        errors.city1 = \"Please select city\";\n      }\n      if (!data.zipcode1) {\n        errors.zipcode1 = \"Please enter zip code\";\n      }\n      // =====================================================================\n\n      if (!data.contractUpload) {\n        errors.contractUpload = \"Please upload contract file\";\n      }\n\n      return errors;\n    },\n    onSubmit: (data) => {\n      // addNewCustomer(data);\n    },\n  });\n  const isAddFormFieldValid = (name, index = null, subname = \"\") => {\n    if (index && subname) {\n      !!(\n        addfFrmik.touched[name][index][subname] &&\n        addfFrmik.errors[name][index][subname]\n      );\n    } else {\n      !!(addfFrmik.touched[name] && addfFrmik.errors[name]);\n    }\n  };\n\n  const getAddFormErrorMessage = (name, index = null, subname = \"\") => {\n    if (index && subname) {\n      return (\n        isAddFormFieldValid(name, index, subname) && (\n          <small className=\"p-error\">\n            {addfFrmik.errors[name][index][subname]}\n          </small>\n        )\n      );\n    }\n    return (\n      isAddFormFieldValid(name) && (\n        <small className=\"p-error\">{addfFrmik.errors[name]}</small>\n      )\n    );\n  };\n  const jobFormik = useFormik({\n    initialValues: {\n      title: \"\",\n      location: \"\",\n      experience: \"\",\n      jobType: \"\",\n      workPlace: \"\",\n      salary: \"\",\n      jobDescription: \"\",\n    },\n    validate: (data) => {\n      let errors = {};\n\n      if (!data.title) {\n        errors.title = \"Please enter job title.\";\n      }\n      if (!data.location) {\n        errors.location = \"Please enter job location.\";\n      }\n      if (!data.experience) {\n        errors.experience = \"Please enter experience.\";\n      }\n      if (!data.workPlace) {\n        errors.workPlace = \"Please select work place.\";\n      }\n      if (!data.jobType) {\n        errors.jobType = \"Please select job type.\";\n      }\n      if (!data.salary) {\n        errors.salary = \"Please enter salary.\";\n      }\n      if (!data.jobDescription) {\n        errors.jobDescription = \"Please enter job description.\";\n      }\n\n      return errors;\n    },\n    onSubmit: (data) => {},\n  });\n  const isJobFormFieldValid = (name) =>\n    !!(jobFormik.touched[name] && jobFormik.errors[name]);\n  const getJobFormErrorMessage = (name) => {\n    return (\n      isJobFormFieldValid(name) && (\n        <small className=\"p-error\">{jobFormik.errors[name]}</small>\n      )\n    );\n  };\n\n  // === get all customers =======\n  const getCustomers = async () => {\n    await axios\n      .get(`${AppConstants.Api_BaseUrl}admin/customer/getAll`, {\n        headers: {},\n      })\n      .then(\n        (res) => {\n          const dt = res.data;\n          setCustomerData(dt);\n          customersList = res.data;\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  };\n\n  // ============Code for get Status==========//\n  const getStatus = (rowdata) => {\n    return (\n      <span\n        // onClick={(event) => statusConfirmation(event, rowdata)}\n        className={\n          rowdata.status === \"Active\" ? \"badge bg-success\" : \"badge bg-danger\"\n        }\n      >\n        {rowdata.status}\n      </span>\n    );\n  };\n\n  // // ==============Create new account ===========//\n  // const addNewCustomer = async (data) => {\n  //   setshowspinner(true);\n\n  //   const postData = {\n  //     address: {\n  //       address: [\n  //         {\n  //           contactEmail: \"sk@mityung.com\",\n  //           contactName: \"sk yadav\",\n  //           contactPhone: \"9876534422\",\n  //         },\n  //       ],\n  //     },\n  //     billingInformation: {\n  //       address: {\n  //         city: \"noida\",\n  //         country: \"india\",\n  //         county: \"gautam budhnagar\",\n  //         line1: \"sec 63\",\n  //         line2: \"block b\",\n  //         state: \"up\",\n  //         zip: \"201301\",\n  //       },\n  //       companyName: data.companyName,\n  //     },\n  //     companyName: data.companyName,\n  //     contact: {\n  //       address: [\n  //         {\n  //           contactEmail: \"ace@gmail.com\",\n  //           contactName: \"acescan\",\n  //           contactPhone: \"7564321232\",\n  //         },\n  //       ],\n  //     },\n  //     contractStage: \"Signed\",\n  //     contractType: \"Perm\",\n  //     paymentCycle: \"new\",\n  //     serviceFees: \"332\",\n  //     status: \"Active\",\n  //     taxExampted: true,\n  //     taxId: \"3we7r823yrh\",\n  //     uploadContract: \"null\",\n  //   };\n\n  //   console.log(postData, \"postData\");\n\n  //   await axios\n  //     .post(`http://192.168.1.111:9108/customer/create`, postData, {\n  //       // headers: {\n  //       //     Authorization: `Bearer ${tokenInfo.access_token}`,\n  //       // },\n  //     })\n  //     .then((res) => {\n  //       console.log(res);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  const renderHeader1 = () => {\n    return (\n      <div className=\"row d-flex mt-2\">\n        <div className=\"col-lg-8\">\n          <form\n          // onSubmit={searchFormik.handleSubmit}\n          >\n            <div className=\"row gap-lg-0 mt-lg-0\">\n              <div className=\"col-sm-12 col-lg-4 mb-1\">\n                <span className=\"p-input-icon-left w-100\">\n                  <i className=\"pi pi-search\" />\n                  <InputText\n                    // value={globalFilterValue1}\n                    // onChange={onGlobalFilterChange1}\n                    placeholder=\"Search name\"\n                    className=\"p-inputtext-sm w-100\"\n                    optionLabel=\"name\"\n                    optionValue=\"name\"\n                    filter={false}\n                  />\n                </span>\n              </div>\n              <div className=\"col-sm-12 col-lg-4 mb-1\">\n                <Dropdown\n                  id=\"status\"\n                  name=\"status\"\n                  // options={status}\n                  // value={searchFormik.values.status}\n                  // onChange={searchFormik.handleChange}\n                  className=\"p-inputtext-sm w-100\"\n                  optionLabel=\"name\"\n                  optionValue=\"name\"\n                  filter={false}\n                  placeholder=\"Status\"\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n        <div\n          className=\"col-sm-12 col-md-12 col-lg-4 d-flex \"\n          style={{ justifyContent: \"right\" }}\n        >\n          <Button\n            label=\"Add Customer\"\n            className=\"p-button-outlined p-button-primary p-button-md\"\n            onClick={() => {\n              setViewMode(2);\n            }}\n          />\n          <Button\n            style={{\n              marginLeft: \"10px\",\n            }}\n            role=\"button\"\n            icon=\"pi pi-filter-slash\"\n            label=\"Clear\"\n            className=\"p-button-outlined p-button-md\"\n            // onClick={() => {\n            //   searchFormik.resetForm();\n            //   initFilters1();\n            //   if (pageNumber !== 1) {\n            //     setPageNumber(1);\n            //   } else {\n            //     getAllAccounts({\n            //       dateRange: null,\n            //       status: \"\",\n            //       page: 1,\n            //     });\n            //   }\n            // }}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const actionButton = (rowdata) => {\n    return (\n      <CTooltip content=\"View\" placement=\"right\">\n        <span>\n          <Button\n            label=\"View\"\n            className=\"p-button-outlined p-button-primary p-button-md p-button-raised\"\n            style={{ fontWeight: \"500\", padding: \"0.5rem 1rem\" }}\n          />\n        </span>\n      </CTooltip>\n    );\n  };\n\n  const showRowDetails = (rowdata) => {\n    return (\n      <div>\n        <div className=\"row mt-3\">\n          <div className=\"col-sm-12 col-md-6 col-lg-7 d-flex\">\n            <div className=\"imgDiv ml-0\">\n              <img\n                src=\"AceScan_logo_Symbol.png\"\n                width={125}\n                style={{ borderRadius: \"50%\" }}\n              ></img>\n            </div>\n            <div className=\"infoDiv mx-3 mt-3\">\n              <p style={{ marginBottom: \"0.5rem\" }}>\n                {\" \"}\n                <FaBuilding /> &nbsp; <strong>AceScan</strong>\n              </p>\n              <p style={{ marginBottom: \"0.5rem\" }}>\n                {\" \"}\n                <FaPhoneAlt /> &nbsp; +91 7896 567 908\n              </p>\n              <p style={{ marginBottom: \"0.5rem\" }}>\n                {\" \"}\n                <FaEnvelope /> &nbsp; abcd@mymail.com\n              </p>\n              <p>\n                {\" \"}\n                <FaMapMarkerAlt /> &nbsp; Delhi, India\n              </p>\n            </div>\n          </div>\n          <div className=\"col-sm-6 col-md-4 col-lg-3 d-flex\">\n            <div className=\"my-4 mx-5\">\n              <CTooltip content=\"Update Customer\" placement=\"left\">\n                <span\n                  onClick={() => {\n                    setViewMode(2);\n                    setEditMode(1);\n                  }}\n                >\n                  <FaEdit\n                    className=\"text-secondary\"\n                    style={{ fontSize: \"1.5rem\", cursor: \"pointer\" }}\n                  />\n                </span>\n              </CTooltip>\n            </div>\n            <span>\n              <label\n                htmlFor=\"binary\"\n                className=\"mx-2 mb-3\"\n                style={{ position: \"relative\", top: \"-0.6rem\" }}\n              >\n                Status\n              </label>\n              <InputSwitch\n                checked={switchChecked}\n                onChange={(e) => setSwitchChecked(e.value)}\n                className=\"mt-4\"\n                style={{ position: \"none !important\" }}\n              />\n            </span>\n          </div>\n          <div className=\"col-sm-4 col-md-2 col-lg-2 d-flex\">\n            <CTooltip content=\"Close\" placement=\"left\">\n              <i\n                className=\"pi pi-times editBtn\"\n                style={{\n                  fontSize: \"1.5em\",\n                  position: \"relative\",\n                  left: \"4rem\",\n                }}\n                onClick={() => setViewMode(0)}\n              ></i>\n            </CTooltip>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"row mx-3\">\n          <h4 className=\"col-sm-12 col-md-9 col-lg-10 mt-2\">\n            Job Descriptions\n          </h4>\n          <span className=\"col-sm-12 col-md-3 col-lg-2 mt-2\">\n            <Button\n              label=\"Add Job\"\n              icon=\"pi pi-plus\"\n              className=\"p-button-outlined p-button-primary p-button-md\"\n              onClick={() => {\n                setViewMode(4);\n              }}\n            />\n          </span>\n        </div>\n        <div className=\"row mx-3 my-3\">\n          <div className=\"col-sm-12 col-md-6 col-lg-6 mt-2\">\n            <div\n              className=\"card p-3 d-flex\"\n              onClick={() => setViewMode(3)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <p>\n                <span>\n                  <strong className=\"mx-1 my-2\">Software Developer</strong>\n                </span>\n                {/* <span><InputSwitch checked={switchChecked} onChange={(e) => setSwitchChecked(e.value)} className=\"\" style={{ position: \"relative\", left:\"1px\" }} /></span> */}\n              </p>\n\n              <p className=\"mt-2\">\n                <span>\n                  <FaBriefcase className=\"text-secondary\" /> 2 - 4 Years\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaDollarSign className=\"text-secondary\" /> 4 - 6 LPA\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaMapMarkerAlt className=\"text-secondary\" /> Hybrid\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaBook className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>\n                  Looking for Smart Software Engineer, having rich exp…..\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaIdCard className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>Java, JavaScript, HTML, MySQL, Python</span>\n              </p>\n            </div>\n          </div>\n          <div className=\"col-sm-12 col-md-6 col-lg-6 mt-2\">\n            <div\n              className=\"card p-3\"\n              onClick={() => setViewMode(3)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <strong className=\"mx-1 my-2\">Software Developer</strong>\n              <p className=\"mt-2\">\n                <span>\n                  <FaBriefcase className=\"text-secondary\" /> 2 - 4 Years\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaDollarSign className=\"text-secondary\" /> 4 - 6 LPA\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaMapMarkerAlt className=\"text-secondary\" /> Hybrid\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaBook className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>\n                  Looking for Smart Software Engineer, having rich exp…..\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaIdCard className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>Java, JavaScript, HTML, MySQL, Python</span>\n              </p>\n            </div>\n          </div>\n          <div className=\"col-sm-12 col-md-6 col-lg-6 mt-2\">\n            <div\n              className=\"card p-3 d-flex\"\n              onClick={() => setViewMode(3)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <p>\n                <span>\n                  <strong className=\"mx-1 my-2\">Software Developer</strong>\n                </span>\n                {/* <span><InputSwitch checked={switchChecked} onChange={(e) => setSwitchChecked(e.value)} className=\"\" style={{ position: \"relative\", left:\"1px\" }} /></span> */}\n              </p>\n\n              <p className=\"mt-2\">\n                <span>\n                  <FaBriefcase className=\"text-secondary\" /> 2 - 4 Years\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaDollarSign className=\"text-secondary\" /> 4 - 6 LPA\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaMapMarkerAlt className=\"text-secondary\" /> Hybrid\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaBook className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>\n                  Looking for Smart Software Engineer, having rich exp…..\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaIdCard className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>Java, JavaScript, HTML, MySQL, Python</span>\n              </p>\n            </div>\n          </div>\n          <div className=\"col-sm-12 col-md-6 col-lg-6 mt-2\">\n            <div\n              className=\"card p-3\"\n              onClick={() => setViewMode(3)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <strong className=\"mx-1 my-2\">Software Developer</strong>\n              <p className=\"mt-2\">\n                <span>\n                  <FaBriefcase className=\"text-secondary\" /> 2 - 4 Years\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaDollarSign className=\"text-secondary\" /> 4 - 6 LPA\n                </span>{\" \"}\n                &nbsp;\n                <span>\n                  <FaMapMarkerAlt className=\"text-secondary\" /> Hybrid\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaBook className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>\n                  Looking for Smart Software Engineer, having rich exp…..\n                </span>\n              </p>\n              <p>\n                <span>\n                  <FaIdCard className=\"text-secondary\" />{\" \"}\n                </span>\n                <span>Java, JavaScript, HTML, MySQL, Python</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const jobDetails = () => {\n    return (\n      <div className=\"mx-4\">\n        <h3 className=\" my-3\">\n          {\" \"}\n          <strong>Node Js Developer</strong>{\" \"}\n        </h3>\n        <p className=\"\">\n          Amazon India (Remote){\" \"}\n          <span className=\"text-secondary\">\n            4 days ago, Over 200 applicants\n          </span>\n        </p>\n        <p>\n          <FaBriefcase className=\"text-primary\" /> Full-time · Mid-Senior level\n        </p>\n        <p>\n          <FaFileInvoice className=\"text-info\" /> 10,001+ employees ·\n          Technology, Information and Internet\n        </p>\n        <Divider />\n        <h5 className=\"\">\n          {\" \"}\n          <strong>About the job</strong>{\" \"}\n        </h5>\n        <ul>\n          <li>\n            Work closely with our clients to develop, test, and ship software.\n          </li>\n          <li> Design, code and maintain standard compliant APIs.</li>\n          <li>Debug complex applications</li>\n          <li>Follow agile processes.</li>\n          <li>Follow agile processes.</li>\n          <li>\n            Actively participate in project estimation, planning, code reviews\n            and risk management activities\n          </li>\n          <li>Perform peer code reviews.</li>\n        </ul>\n        <Divider />\n        <h5>\n          <strong>Ideal Candidate</strong>\n        </h5>\n        <ul>\n          <li>Excellent hands-on experience in backend software development</li>\n          <li>Proficient in NodeJS</li>\n          <li>\n            {\" \"}\n            Hands on experience with relational [MySQL] and NoSQL databases\n            [Preferably, MongoDB]\n          </li>\n          <li>Cloud deployment experience [Preferably, AWS]</li>\n          <li>\n            {\" \"}\n            Experience in containerizing with Docker and Kubernetes is an added\n            advantage.\n          </li>\n          <li> Experience in leading a team is an added advantage.</li>\n        </ul>\n        <Divider />\n        <h4>\n          <strong>About the company</strong>\n        </h4>\n        <p>\n          Computer Software{\" \"}\n          <span className=\"text-secondary\">\n            10,001+ employees 768,405 on LinkedIn\n          </span>\n        </p>\n        <p>\n          Amazon is guided by four principles: customer obsession rather than\n          competitor focus, passion for invention, commitment to operational\n          excellence, and long-term thinking. We are driven by the excitement of\n          building technologies, inventing products, and providing services that\n          change lives. We embrace new ways of doing things, make decisions\n          quickly, and are not afraid to fail. We have the scope and\n          capabilities of a large company, and the spirit and heart of a small\n          one.\n        </p>\n        <p>\n          Together, Amazonians research and develop new technologies from Amazon\n          Web Services to Alexa on behalf of our customers: shoppers, sellers,\n          content creators, and developers around the world.\n        </p>\n        <p>\n          Our mission is to be Earth's most customer-centric company. Our\n          actions, goals, projects, programs, and inventions begin and end with\n          the customer top of mind.\n        </p>\n        <p>\n          You'll also hear us say that at Amazon, it's always \"Day 1.\"​ What do\n          we mean? That our approach remains the same as it was on Amazon's very\n          first day - to make smart, fast decisions, stay nimble, invent, and\n          focus on delighting our customers.\n        </p>\n        <div className=\"modal-footer d-flex justify-content-end my-3 mx-3\">\n          {/* <Button\n            label=\"Add\"\n            type=\"submit\"\n            className=\"bg-primary border-0  p-button-md  btn-color p-button-raised\"\n          /> */}\n          <Button\n            onClick={() => {\n              setViewMode(0);\n            }}\n            label={\"Close\"}\n            style={{ marginLeft: \"10px\" }}\n            className=\"bg-danger border-0 p-button-md p-button-raised\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const customBase64Uploader = async (formikObj, valuename, event) => {\n    // convert file to base64 encoded\n    let urldata = window.URL || window.webkitURL;\n    const file = event.files[0];\n    if (file.size < 6000000) {\n      const fileName = event.files[0].name;\n      formikObj.setFieldValue(`${valuename}Name`, fileName);\n      const reader = new FileReader();\n      let blob = null;\n      if (file.type === \"video/mp4\") {\n        blob = await fetch(urldata.createObjectURL(file)).then((r) => r.blob());\n      } else {\n        blob = await fetch(file.objectURL).then((r) => r.blob()); //blob:url\n      }\n      // video.src = urlBlob;\n\n      // video.load();\n      // video.onloadeddata = function() {\n      //     video.play();\n      // }\n\n      reader.readAsDataURL(blob);\n      reader.onloadend = function () {\n        const base64data = reader.result;\n        formikObj.setFieldValue(valuename, base64data);\n      };\n    } else {\n      toast.current.show({\n        severity: \"error\",\n        summary: \"Error\",\n        detail: \"Size of File must be less than 6 MB\",\n        life: 3000,\n      });\n    }\n  };\n\n  //add new event form tamplate\n  const addCustomerForm = () => {\n    return (\n      <form onSubmit={addfFrmik.handleSubmit}>\n        <div className=\"d-flex justify-content-between mx-4 mt-4\">\n          <strong className=\"\">Basic Information</strong>\n          <div className=\"d-flex mr-1 align-items-center\">\n            <p className=\"para-publish\">Status</p>\n            <InputSwitch\n              id=\"status\"\n              name=\"status\"\n              data-size=\"mini\"\n              checked={addfFrmik.values.status}\n              onChange={addfFrmik.handleChange}\n              //     checked={checked2}\n              // onChange={(e) => setChecked2(e.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row mx-3\">\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <InputText\n                id=\"companyName\"\n                name=\"companyName\"\n                value={addfFrmik.values.companyName}\n                onChange={addfFrmik.handleChange}\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"companyName\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"companyName\">\n                Company Name<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"companyName\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <Dropdown\n                id=\"contractStage\"\n                inputId=\"dropdown\"\n                value={addfFrmik.values.contractStage}\n                options={ContractStage}\n                onChange={addfFrmik.handleChange}\n                optionLabel=\"name\"\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"contractStage\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"contractStage\">\n                Contract Stage<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"contractStage\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <Dropdown\n                id=\"contractType\"\n                inputId=\"dropdown\"\n                value={addfFrmik.values.contractType}\n                options={ContractType}\n                onChange={addfFrmik.handleChange}\n                optionLabel=\"name\"\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"contractType\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"contractType\">\n                Contract Type<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"contractType\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <InputText\n                id=\"taxId\"\n                value={addfFrmik.values.taxId}\n                onChange={addfFrmik.handleChange}\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"taxId\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"taxId\">\n                Tax ID (GSTIN) <span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"taxId\")}\n          </div>\n        </div>\n        <div className=\"mx-4 mt-4 \">\n          <strong className=\"\">Contact Information</strong>\n        </div>\n        <div className=\"row mx-3 mt-2\">\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <InputText\n                id=\"line1\"\n                value={addfFrmik.values.line1}\n                onChange={addfFrmik.handleChange}\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"line1\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"line1\">\n                Address line 1<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"line1\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <InputText\n                id=\"line2\"\n                value={addfFrmik.values.line2}\n                onChange={addfFrmik.handleChange}\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"line2\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"line2\">Address line 2</label>\n            </span>\n            {getAddFormErrorMessage(\"line2\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <Dropdown\n                id=\"country\"\n                inputId=\"dropdown\"\n                value={addfFrmik.values.country}\n                // options={userType}\n                onChange={addfFrmik.handleChange}\n                optionLabel=\"name\"\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"country\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"country\">\n                Country<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"country\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3\">\n            <span className=\"p-float-label\">\n              <Dropdown\n                id=\"state\"\n                inputId=\"dropdown\"\n                value={addfFrmik.values.state}\n                // options={userType}\n                onChange={addfFrmik.handleChange}\n                optionLabel=\"name\"\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"state\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"state\">\n                State<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"state\")}\n          </div>\n        </div>\n        <div className=\"row mx-3\">\n          <div className=\"col-sm-12 col-md-3 mt-4\">\n            <span className=\"p-float-label\">\n              <Dropdown\n                id=\"city\"\n                inputId=\"dropdown\"\n                value={addfFrmik.values.city}\n                // options={userType}\n                onChange={addfFrmik.handleChange}\n                optionLabel=\"name\"\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"city\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"city\">\n                City<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"city\")}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-4\">\n            <span className=\"p-float-label\">\n              <InputText\n                id=\"zipcode\"\n                value={addfFrmik.values.zipcode}\n                onChange={addfFrmik.handleChange}\n                className={\n                  (classNames({\n                    \"p-invalid\": isAddFormFieldValid(\"zipcode\"),\n                  }),\n                  \"p-inputtext-sm w-100 borderClass\")\n                }\n              />\n              <label htmlFor=\"zipcode\">\n                Zip code<span className=\"text-danger\">*</span>\n              </label>\n            </span>\n            {getAddFormErrorMessage(\"zipcode\")}\n          </div>\n        </div>\n        {console.log(\"form errorrr\", addfFrmik)}\n        <div className=\"row mx-3\">\n          <div className=\"col-sm-12 col-md-9 mt-3\">\n            {addfFrmik?.values.contactPerson.map((obj, idx) => (\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-md-4 mt-3\">\n                  <span className=\"p-float-label\">\n                    <InputText\n                      id=\"contactName\"\n                      // name={`contactPerson[${idx}].contactName`}\n                      value={obj.contactName}\n                      onChange={addfFrmik.handleChange}\n                      className={\n                        (classNames({\n                          \"p-invalid\": isAddFormFieldValid(\n                            \"contactPerson\",\n                            idx,\n                            \"contactName\"\n                          ),\n                        }),\n                        \"p-inputtext-sm w-100 borderClass\")\n                      }\n                    />\n                    <label htmlFor={`contactPerson[${idx}].contactName`}>\n                      Contact Name <span className=\"text-danger\">*</span>\n                    </label>\n                  </span>\n                  {getAddFormErrorMessage(\"contactPerson\", idx, \"contactName\")}\n                </div>\n                <div className=\"col-sm-12 col-md-4 mt-3\">\n                  <span className=\"p-float-label\">\n                    <InputText\n                      id=\"contactEmail\"\n                      // name={`contactPerson[${idx}].contactEmail`}\n                      value={obj.contactEmail}\n                      onChange={addfFrmik.handleChange}\n                      className={\n                        (classNames({\n                          \"p-invalid\": isAddFormFieldValid(\n                            `contactPerson[${idx}].contactEmail`\n                          ),\n                        }),\n                        \"p-inputtext-sm w-100 borderClass\")\n                      }\n                    />\n                    <label htmlFor={`contactPerson[${idx}].contactEmail`}>\n                      Contact Email <span className=\"text-danger\">*</span>\n                    </label>\n                  </span>\n                  {getAddFormErrorMessage(`contactPerson[${idx}].contactEmail`)}\n                </div>\n                <div className=\"col-sm-12 col-md-4 mt-3\">\n                  <span className=\"p-float-label\">\n                    <InputText\n                      id=\"contactPhone1\"\n                      // name={`contactPerson[${idx}].contactPhone`}\n                      value={obj.contactPhone}\n                      onChange={addfFrmik.handleChange}\n                      className={\n                        (classNames({\n                          \"p-invalid\": isAddFormFieldValid(\n                            `contactPerson[${idx}].contactPhone`\n                          ),\n                        }),\n                        \"p-inputtext-sm w-100 borderClass\")\n                      }\n                    />\n                    <label htmlFor={`contactPerson[${idx}].contactPhone`}>\n                      Contact Phone <span className=\"text-danger\">*</span>\n                    </label>\n                  </span>\n                  {getAddFormErrorMessage(`contactPerson[${idx}].contactPhone`)}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"col-sm-12 col-md-3 mt-3 d-flex align-items-end\">\n            <span>\n              <CTooltip content=\"Add more\" placement=\"top\">\n                <span className=\"addBtn align-items-center\">\n                  <i\n                    className=\"pi pi-plus-circle \"\n                    style={{ fontSize: \"1.5em\" }}\n                    onClick={() => {\n                      const obj = {\n                        contactName: \"\",\n                        contactEmail: \"\",\n                        contactPhone: \"\",\n                      };\n                      const newArray = [...addfFrmik.values.contactPerson, obj];\n\n                      addfFrmik.setFieldValue(\"contactPerson\", newArray);\n                    }}\n                  ></i>\n                </span>\n              </CTooltip>\n            </span>\n            <span className=\"mx-3\">\n              <CTooltip content=\"Add more\" placement=\"top\">\n                <span className=\"addBtn align-items-center\">\n                  <i\n                    className=\"pi pi-delete-left \"\n                    style={{ fontSize: \"1.5em\", color: \"red\" }}\n                    onClick={() => {\n                      addfFrmik.values.contactPerson.splice(-1);\n\n                      addfFrmik.setFieldValue(\n                        \"contactPerson\",\n                        addfFrmik.values.contactPerson\n                      );\n                    }}\n                  ></i>\n                </span>\n              </CTooltip>\n            </span>\n          </div>\n        </div>\n\n        {/* Permanent Contract Type */}\n        {(addfFrmik.values.contractType.name === \"Permanent\" ||\n          addfFrmik.values.contractType.name === \"Both\") && (\n          <div className=\"row mx-3 mt-3 \">\n            <div className=\"row align-items-center\">\n              <div className=\"col-sm-12 col-md-3 mt-3 d-flex\">\n                <div className=\"row \">\n                  <strong>Permanent</strong>\n                </div>\n                <div className=\"d-flex mx-3\">\n                  <div>\n                    <Checkbox\n                      id=\"permanentMutiple\"\n                      name=\"permanentMutiple\"\n                      checked={addfFrmik?.values?.permanentMutiple}\n                      value={addfFrmik?.values?.permanentMutiple}\n                      onChange={addfFrmik?.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <label className=\"mx-1\" htmlFor=\"binary\">\n                      Mutiple\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-12 col-md-3 mt-3\">\n                <span className=\"p-float-label d-flex align-items-center\">\n                  <Dropdown\n                    id=\"paymentCycle\"\n                    inputId=\"dropdown\"\n                    value={addfFrmik.values.paymentCycle}\n                    options={Days}\n                    onChange={addfFrmik.handleChange}\n                    optionLabel=\"name\"\n                    className={\n                      (classNames({\n                        \"p-invalid\": isAddFormFieldValid(\"paymentCycle\"),\n                      }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                    }\n                  />\n                  <span className=\"mx-2\">Days</span>\n                  <label htmlFor=\"contactEmail1\">\n                    Payment Cycle <span className=\"text-danger\">*</span>\n                  </label>\n                </span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-md-6 mt-3\">\n                {addfFrmik?.values.permanentService.map((obj, idx) => (\n                  <div className=\"row\">\n                    <div className=\"row \">\n                      <div className=\"col-sm-12 col-md-6 mt-3\">\n                        <span className=\"p-float-label\">\n                          <InputText\n                            id=\"serviceFee1\"\n                            name={`permanentService[${idx}].serviceFee1`}\n                            value={obj.serviceFee1}\n                            onChange={addfFrmik.handleChange}\n                            className={\n                              (classNames({\n                                \"p-invalid\": isAddFormFieldValid(\n                                  `permanentService[${idx}].serviceFee1`\n                                ),\n                              }),\n                              \"p-inputtext-sm w-100 borderClass\")\n                            }\n                          />\n\n                          <label htmlFor=\"serviceFee1\">\n                            Service Fees %{\" \"}\n                            <span className=\"text-danger\">*</span>\n                          </label>\n                        </span>\n                      </div>\n                      <div className=\"col-sm-12 col-md-6 mt-3\">\n                        <span className=\"p-float-label\">\n                          <InputText\n                            id=\"serviceUpto\"\n                            name={`permanentService[${idx}].serviceUpto`}\n                            value={obj.serviceUpto}\n                            onChange={addfFrmik.handleChange}\n                            className={\n                              (classNames({\n                                \"p-invalid\": isAddFormFieldValid(\n                                  `permanentService[${idx}].serviceUpto`\n                                ),\n                              }),\n                              \"p-inputtext-sm w-100 borderClass\")\n                            }\n                          />\n\n                          <label htmlFor=\"serviceUpto\">\n                            Upto<span className=\"text-danger\">*</span>\n                          </label>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              {addfFrmik?.values?.permanentMutiple && (\n                <div className=\"col-sm-12 col-md-6 mt-3 d-flex align-items-end\">\n                  <span>\n                    <CTooltip content=\"Add more\" placement=\"top\">\n                      <span className=\"addBtn align-items-center\">\n                        <i\n                          className=\"pi pi-plus-circle \"\n                          style={{ fontSize: \"1.5em\" }}\n                          onClick={() => {\n                            const obj = {\n                              serviceFee1: \"\",\n                              serviceUpto: \"\",\n                              serviceFee2: \"\",\n                              serviceAbove: \"\",\n                            };\n                            const newArray = [\n                              ...addfFrmik.values.permanentService,\n                              obj,\n                            ];\n\n                            addfFrmik.setFieldValue(\n                              \"permanentService\",\n                              newArray\n                            );\n                          }}\n                        ></i>\n                      </span>\n                    </CTooltip>\n                  </span>\n                  <span className=\"mx-3\">\n                    <CTooltip content=\"Add more\" placement=\"top\">\n                      <span className=\"addBtn align-items-center\">\n                        <i\n                          className=\"pi pi-delete-left \"\n                          style={{ fontSize: \"1.8em\", color: \"red\" }}\n                          onClick={() => {\n                            addfFrmik.values.permanentService.splice(-1);\n\n                            addfFrmik.setFieldValue(\n                              \"permanentService\",\n                              addfFrmik.values.permanentService\n                            );\n                          }}\n                        ></i>\n                      </span>\n                    </CTooltip>\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Contractual Contract Type */}\n        {(addfFrmik.values.contractType.name === \"Contractual\" ||\n          addfFrmik.values.contractType.name === \"Both\") && (\n          <div className=\"row mx-3 mt-3\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-sm-12 col-md-3 mt-3 d-flex\">\n                <div className=\"row \">\n                  <strong>Contractual</strong>\n                </div>\n                <div className=\"d-flex mx-3\">\n                  <div>\n                    <Checkbox\n                      id=\"contractualMultiple\"\n                      name=\"contractualMultiple\"\n                      checked={addfFrmik?.values?.contractualMultiple}\n                      value={addfFrmik?.values?.contractualMultiple}\n                      onChange={addfFrmik?.handleChange}\n                    />\n                  </div>\n                  <div>\n                    <label className=\"mx-1\" htmlFor=\"binary\">\n                      Mutiple\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-12 col-md-3 mt-3\">\n                <span className=\"p-float-label d-flex align-items-center\">\n                  <Dropdown\n                    id=\"paymentCycle1\"\n                    inputId=\"dropdown\"\n                    value={addfFrmik.values.paymentCycle1}\n                    options={Days}\n                    onChange={addfFrmik.handleChange}\n                    optionLabel=\"name\"\n                    className={\n                      (classNames({\n                        \"p-invalid\": isAddFormFieldValid(\"paymentCycle1\"),\n                      }),\n                      \"p-inputtext-sm w-100 borderClass\")\n                    }\n                  />\n                  <span className=\"mx-2\">Days</span>\n                  <label htmlFor=\"contactEmail1\">\n                    Payment Cycle <span className=\"text-danger\">*</span>\n                  </label>\n                </span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-md-6 mt-3\">\n                {addfFrmik?.values.contractualService.map((obj, idx) => (\n                  <div className=\"row\">\n                    <div className=\"row \">\n                      <div className=\"col-sm-12 col-md-6 mt-3\">\n                        <span className=\"p-float-label\">\n                          <InputText\n                            id=\"margin1\"\n                            name={`contractualService[${idx}].margin1`}\n                            value={obj.margin1}\n                            onChange={addfFrmik.handleChange}\n                            className={\n                              (classNames({\n                                \"p-invalid\": isAddFormFieldValid(\n                                  `contractualService[${idx}].margin1`\n                                ),\n                              }),\n                              \"p-inputtext-sm w-100 borderClass\")\n                            }\n                          />\n\n                          <label htmlFor=\"margin1\">\n                            Margin % <span className=\"text-danger\">*</span>\n                          </label>\n                        </span>\n                      </div>\n                      <div className=\"col-sm-12 col-md-6 mt-3\">\n                        <span className=\"p-float-label\">\n                          <Dropdown\n                            id=\"engagementType1\"\n                            inputId=\"dropdown\"\n                            name={`contractualService[${idx}].engagementType1`}\n                            value={obj.engagementType1}\n                            options={EngagementType}\n                            onChange={addfFrmik.handleChange}\n                            optionLabel=\"name\"\n                            className={\n                              (classNames({\n                                \"p-invalid\": isAddFormFieldValid(\n                                  `contractualService[${idx}].engagementType1`\n                                ),\n                              }),\n                              \"p-inputtext-sm w-100 borderClass\")\n                            }\n                          />\n                          <label htmlFor=\"engagementType1\">\n                            Engagement Type\n                            <span className=\"text-danger\">*</span>\n                          </label>\n                        </span>\n                        {/* {getAddFormErrorMessage(\"engagementType1\")} */}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              {addfFrmik?.values?.contractualMultiple && (\n                <div className=\"col-sm-12 col-md-6 mt-3 d-flex align-items-end\">\n                  <span>\n                    <CTooltip content=\"Add more\" placement=\"top\">\n                      <span className=\"addBtn align-items-center\">\n                        <i\n                          className=\"pi pi-plus-circle \"\n                          style={{ fontSize: \"1.5em\" }}\n                          onClick={() => {\n                            const obj = {\n                              margin1: \"\",\n                              margin2: \"\",\n                              engagementType1: \"\",\n                              engagementType2: \"\",\n                            };\n                            const newArray = [\n                              ...addfFrmik.values.contractualService,\n                              obj,\n                            ];\n\n                            addfFrmik.setFieldValue(\n                              \"contractualService\",\n                              newArray\n                            );\n                          }}\n                        ></i>\n                      </span>\n                    </CTooltip>\n                  </span>\n                  <span className=\"mx-3\">\n                    <CTooltip content=\"Add more\" placement=\"top\">\n                      <span className=\"addBtn align-items-center\">\n                        <i\n                          className=\"pi pi-delete-left \"\n                          style={{ fontSize: \"1.8em\", color: \"red\" }}\n                          onClick={() => {\n                            addfFrmik.values.contractualService.splice(-1);\n\n                            addfFrmik.setFieldValue(\n                              \"contractualService\",\n                              addfFrmik.values.contractualService\n                            );\n                          }}\n                        ></i>\n                      </span>\n                    </CTooltip>\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div className=\"mx-4 mt-4  d-flex\">\n          <strong className=\"\">Billing Information</strong>\n          <span className=\"mx-4 \">\n            <Checkbox\n              inputId=\"binary\"\n              checked={checked}\n              onChange={(e) => setChecked(e.checked)}\n            />\n            <label htmlFor=\"binary\">Same as Company Address &nbsp;</label>\n          </span>\n        </div>\n        <div className={checked === true ? \"d-none\" : \"\"}>\n          <div className=\"row mx-3 mt-3\">\n            <div className=\"col-sm-12 col-md-3 mt-3\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"line1\"\n                  value={addfFrmik.values.line1}\n                  onChange={addfFrmik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"line1\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"line1\">\n                  Address line 1<span className=\"text-danger\">*</span>\n                </label>\n              </span>\n              {getAddFormErrorMessage(\"line1\")}\n            </div>\n            <div className=\"col-sm-12 col-md-3 mt-3\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"line2\"\n                  value={addfFrmik.values.line2}\n                  onChange={addfFrmik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"line2\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"line2\">Address line 2</label>\n              </span>\n              {getAddFormErrorMessage(\"line2\")}\n            </div>\n            <div className=\"col-sm-12 col-md-3 mt-3\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"country1\"\n                  inputId=\"dropdown\"\n                  value={addfFrmik.values.country1}\n                  // options={userType}\n                  onChange={addfFrmik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"country1\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"country1\">\n                  Country<span className=\"text-danger\">*</span>\n                </label>\n              </span>\n              {getAddFormErrorMessage(\"country1\")}\n            </div>\n            <div className=\"col-sm-12 col-md-3 mt-3\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"state1\"\n                  inputId=\"dropdown\"\n                  value={addfFrmik.values.state1}\n                  // options={userType}\n                  onChange={addfFrmik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"state1\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"state1\">\n                  State<span className=\"text-danger\">*</span>\n                </label>\n              </span>\n              {getAddFormErrorMessage(\"state1\")}\n            </div>\n          </div>\n          <div className=\"row mx-3 mt-2\">\n            <div className=\"col-sm-12 col-md-3 mt-4\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"city1\"\n                  inputId=\"dropdown\"\n                  value={addfFrmik.values.city1}\n                  // options={userType}\n                  onChange={addfFrmik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"city1\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"city1\">\n                  City<span className=\"text-danger\">*</span>\n                </label>\n              </span>\n              {getAddFormErrorMessage(\"city1\")}\n            </div>\n            <div className=\"col-sm-12 col-md-3 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"zipcode1\"\n                  value={addfFrmik.values.zipcode1}\n                  onChange={addfFrmik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"zipcode1\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"zipcode1\">\n                  Zip code<span className=\"text-danger\">*</span>\n                </label>\n              </span>\n              {getAddFormErrorMessage(\"zipcode1\")}\n            </div>\n          </div>\n        </div>\n        <div className=\"row mx-3 mt-2\">\n          <div className=\"col-sm-12 col-md-3 mt-4\">\n            <div className=\"field-checkbox\">\n              <Checkbox\n                inputId=\"binary\"\n                checked={checkedTax}\n                onChange={(e) => setCheckedTax(e.checked)}\n              />\n              <label htmlFor=\"binary\" className=\"mx-2\">\n                Tax Exempted\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex flex-column align-items-center\">\n          <div className=\"upload-section mt-3\">\n            <label htmlFor=\"contractUpload\" className=\"block\">\n              Upload Contract File\n              <span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"dotted-boundary\">\n              <div className=\"upload-img\">\n                <FaCloudUploadAlt size={35} />\n              </div>\n              <div className=\"upload-button\">\n                <FileUpload\n                  mode=\"basic\"\n                  id=\"contractUpload\"\n                  name=\"contractUpload\"\n                  accept=\"image/*\"\n                  maxFileSize={6000000}\n                  chooseLabel=\"Browse\"\n                  value={addfFrmik.values.contractUpload}\n                  onSelect={(ev) =>\n                    customBase64Uploader(addfFrmik, \"contractUpload\", ev)\n                  }\n                  className={\n                    (classNames({\n                      \"p-invalid\": isAddFormFieldValid(\"contractUpload\"),\n                    }),\n                    \"p-inputtext-sm w-100 imageUpload mt-2 upload-buttons\")\n                  }\n                />\n              </div>\n              <div className=\"text-center\">\n                <small>Or drag image here</small>\n              </div>\n              <div className=\"upload-text\">\n                <small>{addfFrmik.values.contractUploadName}</small>\n              </div>\n            </div>\n          </div>\n          <div>{getAddFormErrorMessage(\"contractUpload\")}</div>\n        </div>\n        <div className=\"modal-footer d-flex justify-content-end my-3 mx-3\">\n          <Button\n            label={editMode === 1 ? \"Update\" : \"Save\"}\n            type=\"submit\"\n            className=\"bg-primary border-0  p-button-md  btn-color p-button-raised\"\n          />\n          <Button\n            onClick={() => {\n              viewMode === 2 && editMode === 1\n                ? setViewMode(1)\n                : setViewMode(0);\n              addfFrmik.resetForm();\n            }}\n            label={\"Cancel\"}\n            style={{ marginLeft: \"10px\" }}\n            className=\"bg-danger border-0 p-button-md p-button-raised\"\n          />\n        </div>\n      </form>\n    );\n  };\n\n  const jobForm = () => {\n    return (\n      <form onSubmit={jobFormik.handleSubmit}>\n        <div className=\"mx-3\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"title\"\n                  value={jobFormik.values.title}\n                  onChange={jobFormik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"title\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"title\">Job Title</label>\n              </span>\n              {getJobFormErrorMessage(\"title\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"location\"\n                  value={jobFormik.values.location}\n                  onChange={jobFormik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"location\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"location\">Job location</label>\n              </span>\n              {getJobFormErrorMessage(\"location\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"experience\"\n                  value={jobFormik.values.experience}\n                  onChange={jobFormik.handleChange}\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"experience\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                  suffix=\" Years\"\n                />\n                <label htmlFor=\"experience\">Experience (in years)</label>\n              </span>\n              {getJobFormErrorMessage(\"experience\")}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"jobType\"\n                  inputId=\"dropdown\"\n                  value={jobFormik.values.jobType}\n                  // options={jobType}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"jobType\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"jobType\">Job Type</label>\n              </span>\n              {getJobFormErrorMessage(\"jobType\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <Dropdown\n                  id=\"workPlace\"\n                  inputId=\"dropdown\"\n                  value={jobFormik.values.workPlace}\n                  // options={jobType}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"workPlace\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"workPlace\">Work Place</label>\n              </span>\n              {getJobFormErrorMessage(\"workPlace\")}\n            </div>\n            <div className=\"col-sm-12 col-md-4 col-lg-4 mt-4\">\n              <span className=\"p-float-label\">\n                <InputText\n                  id=\"salary\"\n                  value={jobFormik.values.salary}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"salary\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"salary\">Salary</label>\n              </span>\n              {getJobFormErrorMessage(\"salary\")}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-12 col-lg-12 mt-4\">\n              <span className=\"p-float-label\">\n                <InputTextarea\n                  id=\"jobDescription\"\n                  value={jobFormik.values.jobDescription}\n                  onChange={jobFormik.handleChange}\n                  optionLabel=\"name\"\n                  className={\n                    (classNames({\n                      \"p-invalid\": isJobFormFieldValid(\"jobDescription\"),\n                    }),\n                    \"p-inputtext-sm w-100 borderClass\")\n                  }\n                />\n                <label htmlFor=\"jobDescription\">Job Description</label>\n              </span>\n              {getJobFormErrorMessage(\"jobDescription\")}\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer d-flex justify-content-end my-3 mx-3\">\n          <Button\n            label=\"Add\"\n            type=\"submit\"\n            className=\"bg-primary border-0  p-button-md  btn-color p-button-raised\"\n          />\n          <Button\n            onClick={() => {\n              setViewMode(1);\n              jobFormik.resetForm();\n            }}\n            label={\"Cancel\"}\n            style={{ marginLeft: \"10px\" }}\n            className=\"bg-danger border-0 p-button-md p-button-raised\"\n          />\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <div className=\"row mb-2 \">\n      <div className=\"col-sm-12 datatable-doc-demo\">\n        <div className=\"card \">\n          <div className=\"body \">\n            {viewMode === 1 ? (\n              showRowDetails()\n            ) : viewMode === 2 ? (\n              addCustomerForm()\n            ) : viewMode === 3 ? (\n              jobDetails()\n            ) : viewMode === 4 ? (\n              jobForm()\n            ) : viewMode === 5 ? (\n              addNewContactPerson()\n            ) : (\n              <DataTable\n                value={customerData}\n                responsiveLayout=\"scroll\"\n                className=\"p-datatable-customers \"\n                showGridlines={false}\n                rows={10}\n                stripedRows\n                dataKey=\"id\"\n                paginator\n                // filters={filters1}\n                // loading={accountLoading}\n                filterDisplay=\"menu\"\n                onRowClick={() => setViewMode(1)}\n                globalFilterFields={[\n                  \"firstName\",\n                  \"DOB\",\n                  \"mobile\",\n                  \"creator\",\n                  \"status\",\n                ]}\n                header={renderHeader1}\n                emptyMessage=\"No customers found.\"\n              >\n                <Column\n                  header=\"Customer\"\n                  field=\"companyName\"\n                  sortable\n                  style={{ cursor: \"pointer\" }}\n                ></Column>\n                <Column\n                  header=\"Location\"\n                  field=\"location\"\n                  body={(rowdata) => {\n                    return (\n                      <span>\n                        {rowdata.address.city + \", \" + rowdata.address.state}\n                      </span>\n                    );\n                  }}\n                  sortable\n                  style={{ cursor: \"pointer\" }}\n                ></Column>\n                {/* <Column\n                  field=\"operation_SPOC\"\n                  header=\"Operation SPOC\"\n                  style={{ cursor: \"pointer\" }}\n                  sortable\n                ></Column> */}\n                {/* <Column\n                  header=\"Billing SPOC\"\n                  field=\"billing_SPOC\"\n                  style={{ cursor: \"pointer\" }}\n                  sortable\n                ></Column> */}\n                <Column\n                  field=\"contractType\"\n                  header=\"Contract Type\"\n                  style={{ cursor: \"pointer\" }}\n                  sortable\n                ></Column>\n                <Column\n                  field=\"contractStage\"\n                  header=\"Contract\"\n                  style={{ cursor: \"pointer\" }}\n                  sortable\n                ></Column>\n                {/* <Column\n                  header=\"Tax Exampted\"\n                  field=\"taxExampted\"\n                  style={{ cursor: \"pointer\" }}\n                  sortable\n                ></Column> */}\n                {/* <Column\n                  field=\"serviceFees\"\n                  header=\"Fees\"\n                  style={{ cursor: \"pointer\" }}\n                ></Column> */}\n                <Column\n                  field=\"status\"\n                  header=\"Status\"\n                  style={{ cursor: \"pointer\" }}\n                  // body={getStatus}\n                  sortable\n                ></Column>\n              </DataTable>\n            )}\n          </div>\n        </div>\n      </div>\n      {showspinner && (\n        <div className=\"spinner-div\">\n          <ProgressSpinner />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Customers;\n"],"names":["AppConstants","Api_BaseUrl","customersList","useState","viewMode","setViewMode","showspinner","editMode","setEditMode","switchChecked","setSwitchChecked","checked","setChecked","checkedTax","setCheckedTax","customerData","setCustomerData","ContractType","name","EngagementType","Days","ContractStage","useEffect","getCustomers","addfFrmik","useFormik","initialValues","status","companyName","contractStage","contractType","taxId","contactPerson","contactName","contactEmail","contactPhone","permanentMutiple","permanentService","serviceFee1","serviceUpto","contractualMultiple","contractualService","margin1","engagementType1","paymentCycle","paymentCycle1","panNo","gstNo1","gstNo2","line1","line2","country","state","city","zipcode","line11","line21","country1","state1","city1","zipcode1","contractUpload","contractUploadName","validate","data","errors","console","log","length","forEach","_","index","onSubmit","isAddFormFieldValid","subname","touched","getAddFormErrorMessage","className","jobFormik","title","location","experience","jobType","workPlace","salary","jobDescription","isJobFormFieldValid","getJobFormErrorMessage","axios","headers","then","res","dt","err","customBase64Uploader","formikObj","valuename","event","urldata","window","URL","webkitURL","file","files","size","fileName","setFieldValue","reader","FileReader","blob","type","fetch","createObjectURL","r","objectURL","readAsDataURL","onloadend","base64data","result","toast","current","show","severity","summary","detail","life","src","width","style","borderRadius","marginBottom","content","placement","onClick","fontSize","cursor","htmlFor","position","top","onChange","e","value","left","label","icon","handleSubmit","id","values","handleChange","classNames","inputId","options","optionLabel","map","obj","idx","newArray","color","splice","serviceFee2","serviceAbove","margin2","engagementType2","mode","accept","maxFileSize","chooseLabel","onSelect","ev","resetForm","marginLeft","addCustomerForm","suffix","addNewContactPerson","responsiveLayout","showGridlines","rows","stripedRows","dataKey","paginator","filterDisplay","onRowClick","globalFilterFields","header","placeholder","optionValue","filter","justifyContent","role","emptyMessage","field","sortable","body","rowdata","address"],"sourceRoot":""}